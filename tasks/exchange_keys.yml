---

# {{item}} is an entrynode ansible host
- name: Detect remote host tinc configuration directory
  set_fact:
    tinc_net_dir: >-
      {{ hostvars[item].get('tinc_boot_tinc_dir', '/etc/tinc') }}/
      {{ hostvars[item].get('tinc_boot_network', tinc_boot_network) | regex_replace('[^a-z0-9]+') }}
    node_name: "{{ hostvars[item].get('tinc_boot_name', item) | regex_replace('[^a-z0-9]+') }}"

- name: Create buffer for keys
  tempfile:
    suffix: keys
    state: directory
  register: buffer

- name: "Fetch node file from {{ item }} to local buffer"
  fetch:
    flat: true
    src: "{{ tinc_net_dir }}/hosts/{{ node_name }}"
    dest: "{{ buffer.path }}/"
  delegate_to: "{{ item }}"

- name: Add host key
  fetch:
    flat: true
    src: "{{ tinc_boot_tinc_dir }}/{{ tinc_boot_network }}/hosts/{{ tinc_boot_name }}"
    dest: "{{ buffer.path }}/"

- name: "Copy {{ item }} public key to {{ ansible_hostname }}"
  copy:
    mode: a+x
    src: "{{ buffer.path }}/{{ node_name }}"
    dest: "{{ tinc_boot_tinc_dir }}/{{ tinc_boot_network }}/hosts/"

- name: Copy {{ ansible_hostname }} public key to {{ item }}
  copy:
    mode: a+x
    src: "{{ buffer.path }}/{{ tinc_boot_name }}"
    dest: "{{ tinc_net_dir }}/hosts/"
  delegate_to: "{{ item }}"

- name: Detect public nodes
  find:
    paths: "{{ buffer.path }}"
    contains: Address
  register: public_nodes

- name: Add records to configuration
  lineinfile:
    path: "{{ tinc_boot_tinc_dir }}/{{ tinc_boot_network }}/tinc.conf"
    regexp: "ConnectTo[ ]*=[ ]*{{ item.path | basename }}"
    line: "ConnectTo = {{ item.path | basename }}"
  loop: "{{ public_nodes.files }}"

- name: Clean buffer
  file:
    state: absent
    path: "{{ buffer.path }}"
